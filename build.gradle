/* For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/java_library_plugin.html
 */

version = '1.2'

buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
        classpath 'com.kncept.junit5.reporter:junit-reporter:1.1.0'
    }
}

apply plugin: "kotlin"
apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.kncept.junit5.reporter'

compileKotlin {
    kotlinOptions {
        includeRuntime = true
        noStdlib = false
    }
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.code.gson:gson:2.7'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'

    compile "org.jetbrains.kotlin:kotlin-runtime"
    //compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform()
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

jar {
    // exclude cmdline utilities -- only include library classes of judoku package
    exclude('*.class')

    manifest {
        attributes 'Implementation-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Vendor': '(C) 2018 Steve Ball <jetpants@gmail.com>'
    }

    from {
        String[] include = [
            "kotlin-runtime-${kotlin_version}.jar",
            "kotlin-stdlib-${kotlin_version}.jar"
        ]

        configurations.compile
            .findAll { include.contains(it.name) }
            .collect { it.isDirectory() ? it : zipTree(it) }
    }
}
